Archive member included because of file (symbol)

c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
                              123.o (__udivmodqi4)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o (exit)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
                              123.o (__do_copy_data)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)
                              123.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

tick0               0x2               123.o
min                 0x1               123.o
sec                 0x1               123.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o
LOAD 123.o
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51\libc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x3c2
 *(.vectors)
 .vectors       0x00000000       0x8c c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1c c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000b4       0x10 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)
                0x000000b4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c4        0x8 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000cc        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o
                0x000000cc                __vector_22
                0x000000cc                __vector_28
                0x000000cc                __vector_1
                0x000000cc                __vector_32
                0x000000cc                __vector_34
                0x000000cc                __vector_24
                0x000000cc                __vector_12
                0x000000cc                __bad_interrupt
                0x000000cc                __vector_6
                0x000000cc                __vector_31
                0x000000cc                __vector_3
                0x000000cc                __vector_23
                0x000000cc                __vector_30
                0x000000cc                __vector_25
                0x000000cc                __vector_11
                0x000000cc                __vector_13
                0x000000cc                __vector_17
                0x000000cc                __vector_19
                0x000000cc                __vector_7
                0x000000cc                __vector_27
                0x000000cc                __vector_5
                0x000000cc                __vector_33
                0x000000cc                __vector_4
                0x000000cc                __vector_9
                0x000000cc                __vector_2
                0x000000cc                __vector_21
                0x000000cc                __vector_15
                0x000000cc                __vector_29
                0x000000cc                __vector_8
                0x000000cc                __vector_26
                0x000000cc                __vector_14
                0x000000cc                __vector_10
                0x000000cc                __vector_18
                0x000000cc                __vector_20
 .text          0x000000d0      0x2a8 123.o
                0x000000d0                lcdReadCommand
                0x000000f2                lcdWriteCommand
                0x00000122                lcdReadData
                0x00000144                lcdWriteData
                0x00000174                lcdInit
                0x000001d4                lcdString
                0x000001ec                lcdGotoXY
                0x000001fe                lcdNumber
                0x0000024a                __vector_16
 .text          0x00000378        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
 .text          0x00000378        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 .text          0x00000378        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
 .text          0x00000378        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)
                0x00000378                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000378       0x2e 123.o
                0x00000378                main
 .text.libgcc   0x000003a6       0x18 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
                0x000003a6                __udivmodqi4
 .text.libgcc   0x000003be        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x000003be        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
 .text.libgcc   0x000003be        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)
                0x000003be                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000003be        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
                0x000003be                _exit
                0x000003be                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000003be        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000003c2                _etext = .

.data           0x00800100        0xa load address 0x000003c2
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0xa 123.o
                0x00800100                segTable
 .data          0x0080010a        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
 .data          0x0080010a        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 .data          0x0080010a        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
 .data          0x0080010a        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080010a                . = ALIGN (0x2)
                0x0080010a                _edata = .
                0x0080010a                PROVIDE (__data_end, .)

.bss            0x0080010a        0x5
                0x0080010a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080010a        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o
 .bss           0x0080010a        0x1 123.o
                0x0080010a                count
 .bss           0x0080010b        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
 .bss           0x0080010b        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 .bss           0x0080010b        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
 .bss           0x0080010b        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080010b        0x4 123.o
                0x0080010b                tick0
                0x0080010d                min
                0x0080010e                sec
                0x0080010f                PROVIDE (__bss_end, .)
                0x000003c2                __data_load_start = LOADADDR (.data)
                0x000003cc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080010f        0x0
                0x0080010f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080010f                PROVIDE (__noinit_end, .)
                0x0080010f                _end = .
                0x0080010f                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa8
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 123.o
 .debug_aranges
                0x00000028       0x20 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
 .debug_aranges
                0x00000048       0x20 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 .debug_aranges
                0x00000068       0x20 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
 .debug_aranges
                0x00000088       0x20 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x801
 *(.debug_info)
 .debug_info    0x00000000      0x489 123.o
 .debug_info    0x00000489       0xde c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
 .debug_info    0x00000567       0xde c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 .debug_info    0x00000645       0xde c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
 .debug_info    0x00000723       0xde c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x20f
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1bf 123.o
 .debug_abbrev  0x000001bf       0x14 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
 .debug_abbrev  0x000001d3       0x14 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 .debug_abbrev  0x000001e7       0x14 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
 .debug_abbrev  0x000001fb       0x14 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0x405
 *(.debug_line)
 .debug_line    0x00000000      0x1c7 123.o
 .debug_line    0x000001c7       0x92 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_udivmodqi4.o)
 .debug_line    0x00000259       0x88 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_exit.o)
 .debug_line    0x000002e1       0x96 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_copy_data.o)
 .debug_line    0x00000377       0x8e c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr51\libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x104
 *(.debug_frame)
 .debug_frame   0x00000000      0x104 123.o

.debug_str      0x00000000      0x14e
 *(.debug_str)
 .debug_str     0x00000000      0x14e 123.o
                                0x187 (size before relaxing)

.debug_loc      0x00000000      0x1a8
 *(.debug_loc)
 .debug_loc     0x00000000      0x1a8 123.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(123.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 123.o
